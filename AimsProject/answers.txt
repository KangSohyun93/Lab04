Java được coi là pass-by-value, có nghĩa là khi dữ liệu được truyền vào một phương thức, một bản sao của giá trị sẽ được truyền cho phương thức, thay vì truyền dữ liệu gốc. Điều này đúng với cả kiểu dữ liệu nguyên thủy và đối tượng, nhưng có một sự khác biệt quan trọng. Khi các kiểu dữ liệu nguyên thủy (như int, char, float, v.v.) được truyền vào phương thức, phương thức nhận giá trị thực tế của biến, và bất kỳ thay đổi nào thực hiện trong phương thức sẽ không ảnh hưởng đến biến gốc. Tuy nhiên, khi một đối tượng được truyền vào phương thức, cái được truyền thực tế là giá trị của tham chiếu đến đối tượng đó (tức là địa chỉ bộ nhớ nơi đối tượng được lưu trữ). Điều này có thể gây nhầm lẫn vì có vẻ như là "pass-by-reference", nhưng thực tế vẫn là pass-by-value vì phương thức nhận bản sao của tham chiếu, không phải tham chiếu gốc. Do đó, các thay đổi đối với các trường của đối tượng trong phương thức sẽ ảnh hưởng đến đối tượng gốc, nhưng việc gán lại tham chiếu trong phương thức sẽ không ảnh hưởng đến tham chiếu gốc ngoài phương thức. Vì vậy, Java là pass-by-value một cách nghiêm ngặt, dù là làm việc với kiểu dữ liệu nguyên thủy hay tham chiếu đối tượng.